version: '3.7'

services:
  backendapp:
    build:
      context: ../..
      dockerfile: conf/Dockerfile
    command: gunicorn SinaHospital.wsgi:application --bind 0.0.0.0:8000 --workers=5
    volumes:
      - static_volume:/code/static/
      - media_volume:/code/media/
    expose:
      - 8000
    environment:
      - DJANGO_SECRET_KEY
      - DJANGO_HOST
      - DJANGO_DEBUG
      - DJANGO_SUPERUSER_USERNAME
      - DJANGO_SUPERUSER_PASSWORD
      - DJANGO_SUPERUSER_EMAIL
      - DJANGO_RUN_TEST
      - SITE_DOMAIN_NAME
      - SITE_DISPLAY_NAME
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
      - EMAIL_HOST
      - EMAIL_HOST_USER
      - EMAIL_HOST_PASSWORD
      - EMAIL_PORT
      - EMAIL_USE_TLS
      - DEFAULT_FROM_EMAIL
      - ENABLE_BROWSABLE_API
      - DJANGO_STATIC_URL
    links:
      - postgres-db

  db:
    image: postgres:15.2
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=ooproject
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=ooprojectpass
    volumes:
      - postgres-data:/var/lib/postgresql/data/

  redis:
    image: redis:7
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  nginx:
    build: ./nginx
    ports:
      - "${DEPLOY_PORT}:80"
    volumes:
      - static_volume:/backend/static/
      - media_volume:/backend/media/
      - frontend_volume:/frontend/
    environment:
      - DEPLOY_PORT
      - DJANGO_STATIC_URL
    depends_on:
      - backendapp

  rabbitmq:
    image: "rabbitmq:alpine"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3


volumes:
  postgres_data:
  static_volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: "~/${DEPLOY_DATA_DIR}/${STACK_NAME}/static/"
  media_volume:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: "~/${DEPLOY_DATA_DIR}/${STACK_NAME}/media/"